
package com.example.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import org.glassfish.pfl.dynamic.copyobject.spi.ObjectCopierFactory;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapMatches", targetNamespace = "http://Soap.example.com/")
@XmlSeeAlso({ ObjectCopierFactory.class })
public interface SoapMatches {

    /**
     * 
     * @param filterModel
     * @return returns client.MatchesPojo
     */
    @WebMethod(operationName = "GetAllMatchesFiltered", action = "get_all_matches_filtered")
    @WebResult(name = "MatchesPojo", targetNamespace = "")
    @RequestWrapper(localName = "GetAllMatchesFiltered", targetNamespace = "http://Soap.example.com/", className = "client.GetAllMatchesFiltered")
    @ResponseWrapper(localName = "GetAllMatchesFilteredResponse", targetNamespace = "http://Soap.example.com/", className = "client.GetAllMatchesFilteredResponse")
    @Action(input = "get_all_matches_filtered", output = "http://Soap.example.com/SoapMatches/GetAllMatchesFilteredResponse")
    public MatchesPojo getAllMatchesFiltered(
            @WebParam(name = "FilterModel", targetNamespace = "") FilterHelper filterModel);

    /**
     * 
     * @param matchPojo
     * @return returns client.SoapResponse
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "UpdateMatch", action = "update_match")
    @WebResult(name = "SoapResponse", targetNamespace = "")
    @RequestWrapper(localName = "UpdateMatch", targetNamespace = "http://Soap.example.com/", className = "client.UpdateMatch")
    @ResponseWrapper(localName = "UpdateMatchResponse", targetNamespace = "http://Soap.example.com/", className = "client.UpdateMatchResponse")
    @Action(input = "update_match", output = "http://Soap.example.com/SoapMatches/UpdateMatchResponse", fault = {
            @FaultAction(className = Exception_Exception.class, value = "http://Soap.example.com/SoapMatches/UpdateMatch/Fault/Exception") })
    public SoapResponse updateMatch(@WebParam(name = "MatchPojo", targetNamespace = "") MatchPojo matchPojo)
            throws Exception_Exception;

    /**
     * 
     * @param matchPojo
     * @return returns client.SoapResponse
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "AddMatch", action = "add_match")
    @WebResult(name = "SoapResponse", targetNamespace = "")
    @RequestWrapper(localName = "AddMatch", targetNamespace = "http://Soap.example.com/", className = "client.AddMatch")
    @ResponseWrapper(localName = "AddMatchResponse", targetNamespace = "http://Soap.example.com/", className = "client.AddMatchResponse")
    @Action(input = "add_match", output = "http://Soap.example.com/SoapMatches/AddMatchResponse", fault = {
            @FaultAction(className = Exception_Exception.class, value = "http://Soap.example.com/SoapMatches/AddMatch/Fault/Exception") })
    public SoapResponse addMatch(@WebParam(name = "MatchPojo", targetNamespace = "") MatchPojo matchPojo)
            throws Exception_Exception;

    /**
     * 
     * @param matchID
     * @return returns client.SoapResponse
     * @throws Exception_Exception
     */
    @WebMethod(operationName = "DeleteMatch", action = "delete_match")
    @WebResult(name = "SoapResponse", targetNamespace = "")
    @RequestWrapper(localName = "DeleteMatch", targetNamespace = "http://Soap.example.com/", className = "client.DeleteMatch")
    @ResponseWrapper(localName = "DeleteMatchResponse", targetNamespace = "http://Soap.example.com/", className = "client.DeleteMatchResponse")
    @Action(input = "delete_match", output = "http://Soap.example.com/SoapMatches/DeleteMatchResponse", fault = {
            @FaultAction(className = Exception_Exception.class, value = "http://Soap.example.com/SoapMatches/DeleteMatch/Fault/Exception") })
    public SoapResponse deleteMatch(@WebParam(name = "MatchID", targetNamespace = "") MatchID matchID)
            throws Exception_Exception;

    /**
     * 
     * @param matchID
     * @return returns client.MatchPojo
     */
    @WebMethod(operationName = "GetMatchById", action = "get_match_byId")
    @WebResult(name = "MatchPojo", targetNamespace = "")
    @RequestWrapper(localName = "GetMatchById", targetNamespace = "http://Soap.example.com/", className = "client.GetMatchById")
    @ResponseWrapper(localName = "GetMatchByIdResponse", targetNamespace = "http://Soap.example.com/", className = "client.GetMatchByIdResponse")
    @Action(input = "get_match_byId", output = "http://Soap.example.com/SoapMatches/GetMatchByIdResponse")
    public MatchPojo getMatchById(@WebParam(name = "MatchID", targetNamespace = "") MatchID matchID);

    /**
     * 
     * @return returns client.MatchesPojo
     */
    @WebMethod(operationName = "GetAllMatches", action = "get_all_matches")
    @WebResult(name = "MatchesPojo", targetNamespace = "")
    @RequestWrapper(localName = "GetAllMatches", targetNamespace = "http://Soap.example.com/", className = "client.GetAllMatches")
    @ResponseWrapper(localName = "GetAllMatchesResponse", targetNamespace = "http://Soap.example.com/", className = "client.GetAllMatchesResponse")
    @Action(input = "get_all_matches", output = "http://Soap.example.com/SoapMatches/GetAllMatchesResponse")
    public MatchesPojo getAllMatches();

}
